{"version":3,"file":"js/app~957c7062.d6a22d2a.js","mappings":"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","sources":["webpack://kalapps-pwa/./src/scripts/utils/helpers.js","webpack://kalapps-pwa/./src/scripts/utils/review.initiator.js","webpack://kalapps-pwa/./src/scripts/utils/search.initiator.js","webpack://kalapps-pwa/./src/scripts/utils/sw.register.js","webpack://kalapps-pwa/./src/scripts/utils/toast.helpers.js","webpack://kalapps-pwa/./src/scripts/utils/url.parser.js"],"sourcesContent":["export const when = (statements, then, otherwise) => Promise.resolve(\n  ((statements) ? then() : otherwise()),\n);\n","import RestaurantProvider from '../provider/restaurant.provider';\n\nclass ReviewSubmitInitator {\n  init({ form, restaurantId, onSuccess }) {\n    this.restaurantId = restaurantId;\n    this.formElement = form;\n    this.onSuccess = onSuccess;\n\n    this.formElement.addEventListener('submit', (event) => {\n      this._onSubmitReview(event);\n    });\n  }\n\n  async _onSubmitReview(event) {\n    event.preventDefault();\n\n    this._toggleLoadingState();\n\n    const form = event.target;\n    const { name, review } = this._extractFormData(form);\n\n    const customerReviews = await RestaurantProvider.postReview({\n      id: this.restaurantId,\n      name,\n      review,\n    });\n\n    form.reset();\n    this._toggleLoadingState();\n\n    this.onSuccess(customerReviews);\n  }\n\n  _extractFormData(form) {\n    const data = new FormData(form);\n\n    const name = data.get('name') || '';\n    const review = data.get('review') || '';\n\n    return {\n      name,\n      review,\n    };\n  }\n\n  _toggleLoadingState() {\n    const loadingElement = document.querySelector('.form_action__loading');\n\n    loadingElement.classList.toggle('active');\n  }\n}\n\nexport default new ReviewSubmitInitator();\n","import RestaurantProvider from '../provider/restaurant.provider';\n\nclass SearchInitiator {\n  init({ restaurants, onLoading }) {\n    this.restaurants = restaurants;\n\n    this.searchElement = document.querySelector('.search_widget__inner');\n    this.inputElement = this.searchElement.querySelector('.search_widget__input');\n    this.resetElement = this.searchElement.querySelector('.search_widget__clear');\n    this.countElement = document.querySelector('.restaurant_count');\n    this.emptyElement = document.querySelector('.restaurant__empty_result');\n\n    this.keyword = '';\n    this.onSearchCallback = null;\n    this.onLoadingCallback = onLoading;\n\n    return this;\n  }\n\n  search(callback) {\n    this.onSearchCallback = (restaurants) => {\n      this._setRestaurantDisplayedCount(restaurants.length);\n\n      callback(restaurants);\n    };\n\n    this.searchElement.addEventListener('submit', (event) => {\n      this._onFormSubmitted(event);\n    });\n    this.inputElement.addEventListener('input', () => {\n      this._onKeywordChanged();\n    });\n    this.resetElement.addEventListener('click', () => {\n      this._onResetClicked();\n    });\n\n    this.onSearchCallback(this.restaurants);\n  }\n\n  _setRestaurantDisplayedCount(count) {\n    if (count === 0) {\n      this.emptyElement.classList.add('active');\n    } else {\n      this.emptyElement.classList.remove('active');\n    }\n\n    this.countElement.innerHTML = `Showing ${count} items out of ${\n      this.restaurants.length\n    } total${this.keyword !== '' ? ` for <b>'${this.keyword}'</b>` : ''}`;\n  }\n\n  async _onFormSubmitted(event) {\n    event.preventDefault();\n\n    if (this.keyword === '') {\n      return this.onSearchCallback(this.restaurants);\n    }\n\n    this.onLoadingCallback();\n\n    const restaurants = await RestaurantProvider.searchRestaurant(this.keyword);\n\n    this._setRestaurantDisplayedCount(restaurants.length);\n\n    return this.onSearchCallback(restaurants);\n  }\n\n  _onKeywordChanged() {\n    this.keyword = this.inputElement.value || '';\n\n    const resetElementClass = this.resetElement.classList;\n\n    if (this.keyword !== '' && !resetElementClass.contains('active')) {\n      resetElementClass.add('active');\n    } else if (this.keyword === '' && resetElementClass.contains('active')) {\n      resetElementClass.remove('active');\n\n      this.onSearchCallback(this.restaurants);\n    }\n  }\n\n  _onResetClicked() {\n    this.resetElement.classList.remove('active');\n    this.inputElement.value = '';\n\n    this.onSearchCallback(this.restaurants);\n  }\n}\n\nexport default SearchInitiator;\n","import * as WebpackWindow from 'workbox-window';\n\nclass ServiceWorker {\n  static async register() {\n    if (!('serviceWorker' in navigator)) {\n      console.log('Service Worker not supported in the browser');\n      return;\n    }\n\n    try {\n      const workbox = new WebpackWindow.Workbox('./sw.bundle.js');\n\n      await workbox.register();\n      console.log('Service worker registered');\n    } catch (error) {\n      console.log('Failed to register service worker', error);\n    }\n  }\n}\n\nexport default ServiceWorker;\n","import { Notyf } from 'notyf';\n\nclass ToastHelpers {\n  constructor() {\n    this.notyf = new Notyf({\n      duration: 3000,\n      position: {\n        x: 'center',\n        y: 'bottom',\n      },\n      types: [\n        {\n          type: 'info',\n          background: '#0da8ee',\n        },\n      ],\n    });\n\n    window.notyf = this.notyf;\n  }\n\n  withError(error) {\n    this.errorDetail = error;\n    return this;\n  }\n\n  success(message) {\n    this.notyf.success(message);\n  }\n\n  info(message) {\n    this.notyf.open({\n      type: 'info',\n      duration: 4000,\n      message,\n    });\n  }\n\n  error(message = 'Something wrong, please try again later.') {\n    this.notyf.error(message);\n\n    if (this.errorDetail) {\n      console.info(`${message}, see: ${this.errorDetail}`);\n\n      this.errorDetail = null;\n    }\n  }\n}\n\nexport default new ToastHelpers();\n","const UrlParser = {\n  parseActiveUrlWithCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    const splitedUrl = this._urlSplitter(url);\n    return this._urlCombiner(splitedUrl);\n  },\n\n  parseActiveUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this._urlSplitter(url);\n  },\n\n  _urlSplitter(url) {\n    const urlsSplits = url.split('/');\n    return {\n      resource: urlsSplits[1] || null,\n      id: urlsSplits[2] || null,\n      verb: urlsSplits[3] || null,\n    };\n  },\n\n  _urlCombiner(splitedUrl) {\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\n    + (splitedUrl.id ? '/:id' : '')\n    + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\n  },\n};\n\nexport default UrlParser;\n"],"names":["when","statements","then","otherwise","Promise","resolve","ReviewSubmitInitator","form","restaurantId","onSuccess","this","formElement","addEventListener","event","_onSubmitReview","preventDefault","_toggleLoadingState","target","_extractFormData","name","review","RestaurantProvider","id","customerReviews","reset","data","FormData","get","document","querySelector","classList","toggle","SearchInitiator","restaurants","onLoading","searchElement","inputElement","resetElement","countElement","emptyElement","keyword","onSearchCallback","onLoadingCallback","callback","_setRestaurantDisplayedCount","length","_onFormSubmitted","_onKeywordChanged","_onResetClicked","count","add","remove","innerHTML","value","resetElementClass","contains","ServiceWorker","navigator","console","log","workbox","WebpackWindow","register","ToastHelpers","notyf","Notyf","duration","position","x","y","types","type","background","window","error","errorDetail","message","success","open","info","parseActiveUrlWithCombiner","url","location","hash","slice","toLowerCase","splitedUrl","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","verb"],"sourceRoot":""}